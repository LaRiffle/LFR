{% extends "LFRStoreBundle::layout.html.twig" %}
{% block title %}
  | Créations préférées
{% endblock %}
{% block body %}

<div id="explore-page">
  {% set navbar = "LFRStoreBundle:Utils:nav.html.twig" %}
  {% set lateral_navbar = "LFRStoreBundle:Search:lateral.html.twig" %}
  {{ include(navbar, {'active': 'collection'}) }}
  <div class="container">
    <div class="row">
      <div class="col-md-3 col-sm-6">
        {{ include(lateral_navbar) }}
      </div>
      <div id="display_icons" class="col-md-9 col-sm-6">
        <div>
          <h3>Vos créations préférées</h3>
          {% set icons = "LFRStoreBundle:Creation:index.html.twig" %}
          {{ include(icons, {'creations': creations}) }}
        </div>
      </div>
    </div>
  </div>
</div>
{% endblock %}
{% block script %}
<script>
  $('.creation-icon').slice(0,10).each(function(){
      $(this).fadeIn();
      var img = $(this).find('img');
      var img_width = img.width();
      var img_height = img.height();
      if(img_width < img_height){
         img.addClass('portrait');
      } else {
         img.removeClass('portrait');
      }
      icons.push(icon);
  })
</script>
<script>
  function reshape_image(obj){
    var img = $(obj).find('img');
    var img_width = img.width();
    var img_height = img.height();
    if(img_width < img_height){
       img.addClass('portrait');
    } else {
       img.removeClass('portrait');
    }
  }
  var filter = {
    collection: "{{ collection_id }}",
    category: "{{ category_id }}",
    types: []
  }

  function icon_filter(){
    var visible_items = 0;
    $('.creation-icon:not(.add-icon)').each(function(){
      var collection = $(this).attr('data-collection');
      var category = $(this).attr('data-category');
      var types = $(this).attr('data-type').split(',').map(Number);
      var visible = (collection == filter.collection || filter.collection == 'all')
      visible = visible && (category == filter.category || filter.category == 'all')
      if(filter.types.length > 0){
        var has_one_type = false;
        for(i in types){
          var type = types[i];
          has_one_type = has_one_type || filter.types.includes(type);
        }
        visible = visible && has_one_type;
      }
      if(visible){
        $(this).show();
        reshape_image(this);
        visible_items++;
      } else {
        $(this).hide();
      }
    });
    if(visible_items > 0){
      $('#number_results').html('('+visible_items+')');
      $('#no_results').hide();
    } else {
      $('#number_results').html('');
      $('#no_results').show();
    }
    if(filter.category == 'accessoire'){
      $('.vetement_filter').hide();
    } else {
      $('.vetement_filter').show();
    }
  }
  $(document).ready(function(){
    setTimeout(function(){
      $('.creation-icon').hide().css('visibility', 'visible').fadeIn();
      icon_filter();
    }, 400);
  });

  var first_click = true;
  function reorganize(){
    if(first_click){
      $('.creation-icon').each(function(){
        $(this).css('position', 'static');
        $(this).css('transform', 'none');
      });
      first_click = false;
    }
  }
  $('#reorder-btn').on('click', function(e){
    e.preventDefault();
    reorganize();
  });

  $('#menu_lateral a.filter').on('click', function(e){
    e.preventDefault();
    reorganize();
    var $input = $(this).find("input").first();
    $input.prop("checked", !$input.prop("checked"));
    var type_id = Number(this.href.split('-')[1]);
    if($input.prop("checked")){
      filter.types.push(type_id);
      $(this).find('i').removeClass('fa-circle-thin').addClass('fa-circle');
    } else {
      var index = filter.types.indexOf(type_id);
      if (index > -1) {
          filter.types.splice(index, 1);
      }
      $(this).find('i').removeClass('fa-circle').addClass('fa-circle-thin');
    }
    icon_filter();
  });

  $("#select_collection").change(function() {
    reorganize();
    filter.collection = $(this).val();
    icon_filter();
  });
  $("#select_category").change(function() {
    reorganize();
    filter.category = $(this).val();
    icon_filter();
  });
</script>
<script>
/* Put on top creation on which we hover with the mouse */

  nb_creation = $('.creation-icon').length;
  z_index = nb_creation;
  $('.creation-icon').mouseenter(function(){
    var $this = $(this)
    $this.css('z-index', z_index);
    /*
    $this.css('opacity', 0);
    setTimeout(function(){
      $this.css('z-index', z_index).css('opacity', 1);
    }, 400);*/
    z_index += 1;
  })

</script>
<script>
$(document).ready(function(){
  $('.toggler').on('click', function(e){
    e.preventDefault();
    id = $(this).attr('data-toggle');
    console.log(id);
    if($('#'+id).is(":visible")){
      $('#'+id).slideUp();
      $(this).css('border-color','rgba(0,0,0,.125)');
    } else {
      $('.toggler').each(function(){
        $(this).css('border-color','rgba(0,0,0,.125)');
      });
      $('.gender').each(function(){
        $(this).find('input:checkbox').each(function(){
          var $input = $(this);
          $input.prop("checked", false);
          console.log($input.parent());
          var type_id = Number($input.parent().attr('href').split('-')[1]);
          var index = filter.types.indexOf(type_id);
          if (index > -1) {
              filter.types.splice(index, 1);
          }
          $input.parent().find('i').removeClass('fa-circle').addClass('fa-circle-thin');
        });
        icon_filter();
        if($(this).attr('id') != id){
          $(this).hide();
        }
      });
      $(this).css('border-color','rgb(2, 117, 216)');
      $('#'+id).slideDown();
    }
  });
});
</script>
{% endblock %}
